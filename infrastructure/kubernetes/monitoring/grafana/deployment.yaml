apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: matter-platform
  labels:
    app: grafana
    component: monitoring
    part-of: matter-satellite-platform
spec:
  replicas: 1  # Single replica since Grafana uses persistent storage
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
      annotations:
        prometheus.io/scrape: "true"  # Enable Prometheus metrics scraping
        prometheus.io/port: "3000"    # Grafana metrics port
    spec:
      serviceAccountName: grafana
      securityContext:
        fsGroup: 472  # Grafana container runs as non-root
        runAsUser: 472
      containers:
        - name: grafana
          # grafana/grafana:9.5.0 - Stable enterprise-ready version
          image: grafana/grafana:9.5.0
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /api/health
              port: 3000
            initialDelaySeconds: 30
            timeoutSeconds: 5
          livenessProbe:
            httpGet:
              path: /api/health
              port: 3000
            initialDelaySeconds: 60
            timeoutSeconds: 5
          resources:
            requests:
              cpu: "200m"     # Base CPU request
              memory: "256Mi" # Base memory request
            limits:
              cpu: "500m"     # CPU limit
              memory: "512Mi" # Memory limit
          env:
            - name: GF_SECURITY_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: grafana-credentials
                  key: admin-password
            - name: GF_AUTH_ANONYMOUS_ENABLED
              value: "false"
            - name: GF_SERVER_ROOT_URL
              value: "https://grafana.matter-platform.internal"
            - name: GF_INSTALL_PLUGINS
              value: "grafana-piechart-panel,grafana-worldmap-panel"
            - name: GF_SECURITY_ALLOW_EMBEDDING
              value: "true"
            - name: GF_DASHBOARDS_MIN_REFRESH_INTERVAL
              value: "5s"
          volumeMounts:
            - name: datasources
              mountPath: /etc/grafana/provisioning/datasources
              readOnly: true
            - name: dashboards
              mountPath: /etc/grafana/provisioning/dashboards
              readOnly: true
            - name: storage
              mountPath: /var/lib/grafana
      volumes:
        - name: datasources
          configMap:
            name: grafana-datasources
        - name: dashboards
          configMap:
            name: grafana-dashboards
        - name: storage
          persistentVolumeClaim:
            claimName: grafana-storage
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - grafana
                topologyKey: kubernetes.io/hostname
      terminationGracePeriodSeconds: 60