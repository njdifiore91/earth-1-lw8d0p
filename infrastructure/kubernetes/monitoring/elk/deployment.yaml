# ELK Stack Deployment for Matter Platform
# Version: 8.0
# Purpose: Centralized logging, monitoring and visualization with enhanced security
apiVersion: apps/v1
kind: Deployment
metadata:
  name: elasticsearch
  namespace: matter-platform
  labels:
    app: elasticsearch
    component: logging
    tier: monitoring
spec:
  replicas: 3
  selector:
    matchLabels:
      app: elasticsearch
  template:
    metadata:
      labels:
        app: elasticsearch
    spec:
      securityContext:
        fsGroup: 1000
        runAsUser: 1000
        runAsNonRoot: true
      containers:
      - name: elasticsearch
        image: docker.elastic.co/elasticsearch/elasticsearch:8.0
        env:
        - name: ES_JAVA_OPTS
          value: "-Xms2g -Xmx2g -Dlog4j2.formatMsgNoLookups=true"
        - name: ELASTIC_PASSWORD
          valueFrom:
            secretKeyRef:
              name: elastic-credentials
              key: password
        resources:
          requests:
            cpu: "1000m"
            memory: "2Gi"
          limits:
            cpu: "2000m"
            memory: "4Gi"
        ports:
        - containerPort: 9200
          name: http
        - containerPort: 9300
          name: transport
        volumeMounts:
        - name: elasticsearch-data
          mountPath: /usr/share/elasticsearch/data
        - name: elasticsearch-config
          mountPath: /usr/share/elasticsearch/config/elasticsearch.yml
          subPath: elasticsearch.yml
        - name: elasticsearch-certs
          mountPath: /usr/share/elasticsearch/config/certs
      volumes:
      - name: elasticsearch-data
        persistentVolumeClaim:
          claimName: elasticsearch-data
      - name: elasticsearch-config
        configMap:
          name: elasticsearch-config
      - name: elasticsearch-certs
        secret:
          secretName: elasticsearch-certs
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: logstash
  namespace: matter-platform
  labels:
    app: logstash
    component: logging
    tier: monitoring
spec:
  replicas: 2
  selector:
    matchLabels:
      app: logstash
  template:
    metadata:
      labels:
        app: logstash
    spec:
      containers:
      - name: logstash
        image: docker.elastic.co/logstash/logstash:8.0
        env:
        - name: LS_JAVA_OPTS
          value: "-Xms1g -Xmx1g -Dlog4j2.formatMsgNoLookups=true"
        resources:
          requests:
            cpu: "500m"
            memory: "1Gi"
          limits:
            cpu: "1000m"
            memory: "2Gi"
        ports:
        - containerPort: 5044
          name: beats
        - containerPort: 9600
          name: monitoring
        volumeMounts:
        - name: logstash-config
          mountPath: /usr/share/logstash/config/logstash.yml
          subPath: logstash.yml
        - name: logstash-pipeline
          mountPath: /usr/share/logstash/pipeline
        - name: logstash-data
          mountPath: /usr/share/logstash/data
      volumes:
      - name: logstash-config
        configMap:
          name: logstash-config
      - name: logstash-pipeline
        configMap:
          name: logstash-pipeline
      - name: logstash-data
        persistentVolumeClaim:
          claimName: logstash-data
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kibana
  namespace: matter-platform
  labels:
    app: kibana
    component: logging
    tier: monitoring
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kibana
  template:
    metadata:
      labels:
        app: kibana
    spec:
      containers:
      - name: kibana
        image: docker.elastic.co/kibana/kibana:8.0
        env:
        - name: ELASTICSEARCH_URL
          value: "https://elasticsearch:9200"
        - name: ELASTICSEARCH_USERNAME
          value: "kibana_system"
        - name: ELASTICSEARCH_PASSWORD
          valueFrom:
            secretKeyRef:
              name: elastic-credentials
              key: kibana-password
        - name: XPACK_SECURITY_ENCRYPTIONKEY
          valueFrom:
            secretKeyRef:
              name: kibana-secrets
              key: encryptionKey
        resources:
          requests:
            cpu: "500m"
            memory: "1Gi"
          limits:
            cpu: "1000m"
            memory: "2Gi"
        ports:
        - containerPort: 5601
          name: http
        volumeMounts:
        - name: kibana-config
          mountPath: /usr/share/kibana/config/kibana.yml
          subPath: kibana.yml
        - name: kibana-certs
          mountPath: /usr/share/kibana/config/certs
      volumes:
      - name: kibana-config
        configMap:
          name: kibana-config
      - name: kibana-certs
        secret:
          secretName: kibana-certs
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: elasticsearch-data
  namespace: matter-platform
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: gp2
  resources:
    requests:
      storage: 100Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: logstash-data
  namespace: matter-platform
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: gp2
  resources:
    requests:
      storage: 20Gi
---
apiVersion: v1
kind: Service
metadata:
  name: elasticsearch
  namespace: matter-platform
  labels:
    app: elasticsearch
spec:
  ports:
  - port: 9200
    name: http
  - port: 9300
    name: transport
  selector:
    app: elasticsearch
---
apiVersion: v1
kind: Service
metadata:
  name: logstash
  namespace: matter-platform
  labels:
    app: logstash
spec:
  ports:
  - port: 5044
    name: beats
  - port: 9600
    name: monitoring
  selector:
    app: logstash
---
apiVersion: v1
kind: Service
metadata:
  name: kibana
  namespace: matter-platform
  labels:
    app: kibana
spec:
  ports:
  - port: 5601
    name: http
  selector:
    app: kibana