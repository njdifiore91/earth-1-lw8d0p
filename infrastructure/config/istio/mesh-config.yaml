apiVersion: install.istio.io/v1alpha1
kind: IstioOperator
metadata:
  name: matter-mesh-config
  namespace: istio-system
  labels:
    app: matter-satellite-platform
    component: service-mesh
    environment: production
  annotations:
    monitoring.matter.com/enabled: "true"
    security.matter.com/policy-version: "v1"
spec:
  profile: default
  meshConfig:
    # Enable tracing with 100% sampling rate for comprehensive observability
    enableTracing: true
    defaultConfig:
      tracing:
        sampling: 100.0
        zipkin:
          address: jaeger-collector.monitoring.svc.cluster.local:9411
      proxyMetadata:
        ISTIO_META_DNS_CAPTURE: "true"
        ISTIO_META_DNS_AUTO_ALLOCATE: "true"
        ISTIO_META_HTTP_PROTOCOL_DETECTION_TIMEOUT: "5s"
        ISTIO_META_ROUTER_MODE: "standard"

    # Security configuration
    enableAutoMtls: true
    trustDomain: matter-platform.local
    rootNamespace: istio-system
    defaultServiceAccessLogging: true
    defaultServiceTelemetry: true
    
    # Access logging configuration
    accessLogFile: /dev/stdout
    accessLogFormat: |
      {
        "protocol": "%PROTOCOL%",
        "upstream_service": "%UPSTREAM_SERVICE%",
        "response_code": "%RESPONSE_CODE%",
        "response_flags": "%RESPONSE_FLAGS%",
        "response_code_details": "%RESPONSE_CODE_DETAILS%",
        "connection_termination_details": "%CONNECTION_TERMINATION_DETAILS%",
        "upstream_host": "%UPSTREAM_HOST%",
        "user_agent": "%REQ(USER-AGENT)%",
        "request_id": "%REQ(X-REQUEST-ID)%",
        "upstream_cluster": "%UPSTREAM_CLUSTER%",
        "upstream_local_address": "%UPSTREAM_LOCAL_ADDRESS%",
        "downstream_local_address": "%DOWNSTREAM_LOCAL_ADDRESS%",
        "downstream_remote_address": "%DOWNSTREAM_REMOTE_ADDRESS%",
        "requested_server_name": "%REQUESTED_SERVER_NAME%",
        "route_name": "%ROUTE_NAME%",
        "duration": "%DURATION%",
        "upstream_service_time": "%RESP(X-ENVOY-UPSTREAM-SERVICE-TIME)%",
        "forwarded_for": "%REQ(X-FORWARDED-FOR)%",
        "request_method": "%REQ(:METHOD)%",
        "request_path": "%REQ(X-ENVOY-ORIGINAL-PATH?:PATH)%",
        "request_protocol": "%REQ(:PROTOCOL)%",
        "tls_version": "%DOWNSTREAM_TLS_VERSION%",
        "tls_cipher": "%DOWNSTREAM_TLS_CIPHER%",
        "response_duration": "%RESPONSE_DURATION%",
        "response_tx_duration": "%RESPONSE_TX_DURATION%",
        "bytes_received": "%BYTES_RECEIVED%",
        "bytes_sent": "%BYTES_SENT%"
      }
    accessLogEncoding: JSON

    # Traffic management policies
    outboundTrafficPolicy:
      mode: REGISTRY_ONLY
    defaultDestinationRuleExportTo: ["."]
    defaultVirtualServiceExportTo: ["."]
    defaultServiceExportTo: ["."]

    # Resource settings
    defaultResources:
      requests:
        cpu: 100m
        memory: 128Mi
      limits:
        cpu: 2000m
        memory: 1Gi

    # Proxy configuration
    defaultConfig:
      image:
        imageType: distroless
      holdApplicationUntilProxyStarts: true
      proxyMetadata:
        ISTIO_META_DNS_CAPTURE: "true"
        ISTIO_META_DNS_AUTO_ALLOCATE: "true"
      discoveryAddress: istiod.istio-system.svc:15012
      proxyStatsMatcher:
        inclusionRegexps:
          - ".*matter.*"
          - ".*http.*"
          - ".*upstream.*"
      controlPlaneAuthPolicy: MUTUAL_TLS
      concurrency: 2
      terminationDrainDuration: 45s
      parentShutdownDuration: 60s

    # Enable Prometheus metrics merging
    enablePrometheusMerge: true

    # Circuit breaker settings
    defaultDestinationRuleConfig:
      trafficPolicy:
        connectionPool:
          tcp:
            maxConnections: 100
            connectTimeout: 5s
          http:
            http1MaxPendingRequests: 100
            maxRequestsPerConnection: 10
            maxRetries: 3
        outlierDetection:
          consecutive5xxErrors: 5
          interval: 30s
          baseEjectionTime: 30s
          maxEjectionPercent: 10

  # Components configuration
  components:
    pilot:
      k8s:
        resources:
          requests:
            cpu: 500m
            memory: 2Gi
          limits:
            cpu: 1000m
            memory: 4Gi
        hpaSpec:
          maxReplicas: 5
          minReplicas: 2
    
    ingressGateways:
    - name: istio-ingressgateway
      enabled: true
      k8s:
        resources:
          requests:
            cpu: 500m
            memory: 1Gi
          limits:
            cpu: 2000m
            memory: 2Gi
        hpaSpec:
          maxReplicas: 5
          minReplicas: 2
        service:
          type: LoadBalancer
          ports:
          - port: 80
            targetPort: 80
            name: http2
          - port: 443
            targetPort: 443
            name: https

  # Values overrides
  values:
    global:
      proxy:
        privileged: false
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 2000m
            memory: 1Gi
        logLevel: info
      logging:
        level: "default:info"
      imagePullPolicy: Always
      
    pilot:
      autoscaleEnabled: true
      autoscaleMin: 2
      autoscaleMax: 5
      resources:
        requests:
          cpu: 500m
          memory: 2Gi
        limits:
          cpu: 1000m
          memory: 4Gi
      env:
        PILOT_TRACE_SAMPLING: "100.0"

    gateways:
      istio-ingressgateway:
        autoscaleEnabled: true
        autoscaleMin: 2
        autoscaleMax: 5