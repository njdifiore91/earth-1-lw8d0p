[tool.poetry]
name = "planning-service"
version = "1.0.0"
description = "Satellite data collection planning and optimization service"
authors = ["Matter <dev@matter.com>"]
python = "^3.11"

[tool.poetry.dependencies]
python = "^3.11"
fastapi = "^0.95.0"  # High-performance web framework
uvicorn = "^0.21.0"  # ASGI server for FastAPI
pydantic = "^1.10.0"  # Data validation
python-jose = "^3.3.0"  # JWT token handling
tenacity = "^8.2.0"  # Retry handling
prometheus-fastapi-instrumentator = "^5.9.0"  # Metrics collection
redis = "^4.5.0"  # Redis client
numpy = "^1.24.0"  # Numerical computations
pandas = "^2.0.0"  # Data manipulation
geopandas = "^0.13.0"  # Geospatial data handling
shapely = "^2.0.0"  # Geometric operations
pyproj = "^3.5.0"  # Cartographic projections
httpx = "^0.24.0"  # Async HTTP client
python-multipart = "^0.0.6"  # Form data parsing
aioredis = "^2.0.0"  # Async Redis client

[tool.poetry.group.dev.dependencies]
pytest = "^7.3.0"  # Testing framework
pytest-asyncio = "^0.21.0"  # Async test support
pytest-cov = "^4.0.0"  # Test coverage
black = "^23.3.0"  # Code formatting
isort = "^5.12.0"  # Import sorting
mypy = "^1.3.0"  # Static type checking
flake8 = "^6.0.0"  # Code linting
bandit = "^1.7.0"  # Security scanning
safety = "^2.3.0"  # Dependency security checks

[tool.poetry.scripts]
start = "uvicorn src.app:app --host 0.0.0.0 --port 8000 --reload"
test = "pytest"
lint = "flake8 src tests"
format = "black src tests && isort src tests"
type-check = "mypy src"
security-check = "bandit -r src && safety check"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
asyncio_mode = "auto"

[tool.black]
line-length = 100
target-version = ["py311"]
include = "src/**/*.py"

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3

[tool.mypy]
python_version = "3.11"
strict = true
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.flake8]
max-line-length = 100
extend-ignore = ["E203"]
exclude = [".git", "__pycache__", "build", "dist"]

[build-system]
requires = ["poetry-core>=1.5.0"]
build-backend = "poetry.core.masonry.api"